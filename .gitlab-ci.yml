stages:
  - test
  - build
  - deploy

.docker_login:
  image: docker:18.09
  services:
    - docker:18.09-dind
  before_script:
    - echo "$DOCKER_REGISTRY_PASS" | docker login --username $DOCKER_REGISTRY_USER --password-stdin

.test: &test
  stage: test
  image: python:3.8.11-slim-buster
  before_script:
    - pip3 install pipenv
    - pipenv install --system
    - pipenv install -d --system
  script:
    - echo "flake8 --ignore=E501 ."
    - flake8 --ignore=E501 .
    - echo "python3 -m pytest"
    - python3 -m pytest

.build: &build
  stage: build
  extends: .docker_login
  script:
    - export PROJECT_NAME=$(echo "$CI_PROJECT_NAME" | tr "[:upper:]" "[:lower:]")
    - echo "Building docker image $PROJECT_NAME:$CI_COMMIT_SHORT_SHA"
    - docker build -t $DOCKER_REGISTRY_USER/$PROJECT_NAME:$CI_COMMIT_SHORT_SHA .
    - docker push $DOCKER_REGISTRY_USER/$PROJECT_NAME:$CI_COMMIT_SHORT_SHA
    - docker tag $DOCKER_REGISTRY_USER/$PROJECT_NAME:$CI_COMMIT_SHORT_SHA $DOCKER_REGISTRY_USER/$PROJECT_NAME:latest
    - docker push $DOCKER_REGISTRY_USER/$PROJECT_NAME:latest
    - cd frontend/
    - export PROJECT_NAME=$(echo "$CI_PROJECT_NAME" | tr "[:upper:]" "[:lower:]")-flask
    - echo "Building docker image $PROJECT_NAME:$CI_COMMIT_SHORT_SHA"
    - docker build -t $DOCKER_REGISTRY_USER/$PROJECT_NAME:$CI_COMMIT_SHORT_SHA .
    - docker push $DOCKER_REGISTRY_USER/$PROJECT_NAME:$CI_COMMIT_SHORT_SHA
    - docker tag $DOCKER_REGISTRY_USER/$PROJECT_NAME:$CI_COMMIT_SHORT_SHA $DOCKER_REGISTRY_USER/$PROJECT_NAME:latest
    - docker push $DOCKER_REGISTRY_USER/$PROJECT_NAME:latest

.deploy: &deploy
  stage: deploy
  image: ubuntu:latest
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh/id_rsa
    - eval $(ssh-agent -s)
    - ssh-add ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - export PROJECT_NAME=$(echo "$CI_PROJECT_NAME" | tr "[:upper:]" "[:lower:]")
    - export FLASK_NAME=$(echo "$CI_PROJECT_NAME" | tr "[:upper:]" "[:lower:]")-flask
    - scp docker-compose.yml ubuntu@$SERVER_IP:~
    - ssh ubuntu@$SERVER_IP "docker pull $DOCKER_REGISTRY_USER/$PROJECT_NAME:$CI_COMMIT_SHORT_SHA;
      docker pull $DOCKER_REGISTRY_USER/$FLASK_NAME:$CI_COMMIT_SHORT_SHA;
      sed -i 's/%DOCKER_REGISTRY_USER%/${DOCKER_REGISTRY_USER}/' ~/docker-compose.yml;
      sed -i 's/%PROJECT_NAME%/${PROJECT_NAME}/' ~/docker-compose.yml;
      sed -i 's/%TAG%/${CI_COMMIT_SHORT_SHA}/' ~/docker-compose.yml;
      sed -i 's/%FLASK_NAME%/${FLASK_NAME}/' ~/docker-compose.yml;
      sed -i 's/%SERVER_IP%/${SERVER_IP}/' ~/docker-compose.yml;
      docker-compose down -v;
      docker-compose up -d"
  after_script:
    - rm ~/.ssh/id_rsa

T:Test:
  <<: *test

B:Build:
  <<: *build # боремся с копи-пастой

D:Deploy:
  <<: *deploy # боремся с копи-пастой
